/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DefenceSystem;
/**
 *
 * @author theekshanasankalpa
 */
public class Tank extends javax.swing.JFrame implements DefenceSystemObserver{

    /**
     * Creates new form Tank
     */
    public Tank() {
        initComponents();
//        btnSend.setBackground(new Color(0,102,153));
//        btnSend.setForeground(new Color(255,255,255));
        setTitle("Tank");
        setLocation(20,450);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sliderTank = new javax.swing.JSlider();
        spinnerSoldier = new javax.swing.JSpinner();
        spinnerAmmoCount = new javax.swing.JSpinner();
        lblActionTank = new javax.swing.JLabel();
        btnShoot = new javax.swing.JButton();
        btnMissileOperation = new javax.swing.JButton();
        btnRadarOpration = new javax.swing.JButton();
        checkBoxPosition = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        MainTxtArea = new javax.swing.JTextArea();
        txtFieldSend = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        btnRotateShooting = new javax.swing.JButton();
        lblSoldierCount = new javax.swing.JLabel();
        lblAmmoCount = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        sliderTank.setMajorTickSpacing(20);
        sliderTank.setOrientation(javax.swing.JSlider.VERTICAL);
        sliderTank.setPaintLabels(true);
        sliderTank.setPaintTicks(true);
        sliderTank.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        spinnerSoldier.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerSoldierStateChanged(evt);
            }
        });

        btnShoot.setText("Shoot");
        btnShoot.setAlignmentX(0.5F);
        btnShoot.setMaximumSize(new java.awt.Dimension(78, 25));
        btnShoot.setMinimumSize(new java.awt.Dimension(78, 25));
        btnShoot.setPreferredSize(new java.awt.Dimension(78, 25));
        btnShoot.setSize(new java.awt.Dimension(78, 25));
        btnShoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShootActionPerformed(evt);
            }
        });

        btnMissileOperation.setText("Missile Operation");
        btnMissileOperation.setAlignmentX(0.5F);
        btnMissileOperation.setMaximumSize(new java.awt.Dimension(78, 25));
        btnMissileOperation.setMinimumSize(new java.awt.Dimension(78, 25));
        btnMissileOperation.setPreferredSize(new java.awt.Dimension(78, 25));
        btnMissileOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMissileOperationActionPerformed(evt);
            }
        });

        btnRadarOpration.setText("Redar Operation");
        btnRadarOpration.setAlignmentX(0.5F);
        btnRadarOpration.setMaximumSize(new java.awt.Dimension(78, 25));
        btnRadarOpration.setMinimumSize(new java.awt.Dimension(78, 25));
        btnRadarOpration.setPreferredSize(new java.awt.Dimension(78, 25));
        btnRadarOpration.setSize(new java.awt.Dimension(78, 25));
        btnRadarOpration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRadarOprationActionPerformed(evt);
            }
        });

        checkBoxPosition.setText("  Position");
        checkBoxPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxPositionActionPerformed(evt);
            }
        });

        MainTxtArea.setColumns(20);
        MainTxtArea.setRows(5);
        jScrollPane1.setViewportView(MainTxtArea);

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnRotateShooting.setText("Rotate Shooting");
        btnRotateShooting.setAlignmentX(0.5F);
        btnRotateShooting.setMaximumSize(new java.awt.Dimension(78, 25));
        btnRotateShooting.setMinimumSize(new java.awt.Dimension(78, 25));
        btnRotateShooting.setPreferredSize(new java.awt.Dimension(78, 25));
        btnRotateShooting.setSize(new java.awt.Dimension(78, 25));
        btnRotateShooting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRotateShootingActionPerformed(evt);
            }
        });

        lblSoldierCount.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblSoldierCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoldierCount.setText("Soldier Count");

        lblAmmoCount.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblAmmoCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAmmoCount.setText("Ammo Count");

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setText("Fuel Amount");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblActionTank, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnRadarOpration, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnRotateShooting, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnShoot, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnMissileOperation, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkBoxPosition)
                            .addComponent(lblSoldierCount, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAmmoCount, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spinnerAmmoCount, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(spinnerSoldier, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFieldSend, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sliderTank, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliderTank, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSoldierCount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(spinnerSoldier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblActionTank, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinnerAmmoCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMissileOperation, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(btnShoot, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(lblAmmoCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkBoxPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRadarOpration, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(btnRotateShooting, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFieldSend, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShootActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnShootActionPerformed

    private void btnMissileOperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMissileOperationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMissileOperationActionPerformed

    private void btnRadarOprationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRadarOprationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRadarOprationActionPerformed

    private void checkBoxPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBoxPositionActionPerformed

    private void btnRotateShootingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRotateShootingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRotateShootingActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        MainController mainController = new MainController();
        String message = txtFieldSend.getText();
        MainController.txtAreaMsgBox1.append("\nTank : "+message);
    }//GEN-LAST:event_btnSendActionPerformed

    private void spinnerSoldierStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerSoldierStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_spinnerSoldierStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tank().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea MainTxtArea;
    private javax.swing.JButton btnMissileOperation;
    private javax.swing.JButton btnRadarOpration;
    private javax.swing.JButton btnRotateShooting;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnShoot;
    private javax.swing.JCheckBox checkBoxPosition;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblActionTank;
    private javax.swing.JLabel lblAmmoCount;
    private javax.swing.JLabel lblSoldierCount;
    public static javax.swing.JSlider sliderTank;
    public static javax.swing.JSpinner spinnerAmmoCount;
    public static javax.swing.JSpinner spinnerSoldier;
    private javax.swing.JTextField txtFieldSend;
    // End of variables declaration//GEN-END:variables

    public void areaClearedMessage(boolean status) {
        if (status == true) {
            lblActionTank.setText("Cleared");
        } else if (status == false) {
            lblActionTank.setText("Area Not Cleared");
        }
    }
    
    public void updatePosition(int positionLevel) {

        if (checkBoxPosition.isSelected() == true) {
            if (positionLevel > 20) {
                btnShoot.setEnabled(true);
            } else {
                btnShoot.setEnabled(false);
            }
            if (positionLevel > 40) {
                btnMissileOperation.setEnabled(true);
            } else {
                btnMissileOperation.setEnabled(false);
            }
            if (positionLevel > 60) {
                btnRadarOpration.setEnabled(true);
            } else {
                btnRadarOpration.setEnabled(false);
            }
            if (positionLevel > 80) {
                btnRotateShooting.setEnabled(true);
            } else {
                btnRotateShooting.setEnabled(false);
            }
        } else {
            btnShoot.setEnabled(false);
            btnMissileOperation.setEnabled(false);
            btnRadarOpration.setEnabled(false);
            btnRotateShooting.setEnabled(false);
        }
    }
    
    public void updateSendMessages(String message, boolean select, int checkNum) {

        if (select == true && checkNum == 1) {
            MainTxtArea.setText("Private Message : \n\t" + message);
        } else if (select == false) {
            MainTxtArea.setText(message);
        }
    }
}
